document.write("Merhaba JS" + "<br/>");

var havaSÄ±caklÄ±ÄŸÄ± = 20;
document.write(
  "Malatyada hava sÄ±caklÄ±ÄŸÄ± ",
  havaSÄ±caklÄ±ÄŸÄ±,
  " derecedir." + "<br/>"
);

// Bu ÅŸekilde deÄŸiÅŸken ve metin ifadeleri kullanabiliriz.Fakat bunun daha kolay bir yolu mevcuttur.

// * Literal Template(backtick) ``: Backtickler bizlere direkt deÄŸiÅŸken kullanÄ±mÄ± noktasÄ±nda yardÄ±mcÄ± olur.

document.write(
  `Malatyada hava sÄ±caklÄ±ÄŸÄ± ${havaSÄ±caklÄ±ÄŸÄ±} derecedir.` + "<br/>"
);

// ! Metin ÅŸeklindeki ifadeler 'string' denir.

// ! SayÄ± ÅŸeklindeki ifadelere ise 'number' denir.

var selam = "Udemig Akademiden Selamlar ğŸ””";

var sayÄ± = 1234532;

// typeof bir verinin  tipini kontrol eder.
document.write(typeof selam + "<br/>");
document.write(typeof sayÄ± + "<br/>");

var kurum = "Udemig";
var ders = "Javascript";

var metin = ` Merhaba yazÄ±lÄ±m eÄŸitiminin en iyi akademisi olan ${kurum}  den selamlar. ${ders} dersine hoÅŸgeldiniz. `;

document.write(metin + "<br/>");

// ! String MetotlarÄ±

// length ==> Bir string ifadenin  uzunluÄŸunu Ã¶lÃ§er.

document.write("Metinin  UzunluÄŸu :", metin.length + "<br/>");
// indexOf ==> Metin iÃ§erisinde bulunan bir kelimenin sÄ±rasÄ±nÄ± bulmak iÃ§in kullanÄ±lÄ±r.
document.write(
  "Metin iÃ§erisinde yazÄ±lÄ±mÄ±n sÄ±rasÄ± :",
  metin.indexOf("yazÄ±lÄ±m") + "<br/>"
);
// slice ==> Metin iÃ§erisinden belirli bir aralÄ±ÄŸÄ± almamÄ±za olanak tanÄ±r.
document.write(
  "Metinin 18 ve 71 . karakterler arasÄ± :",
  metin.slice(18, 71) + "<br/>"
);
// replace ==> metin iÃ§erisindeki bir kelimeyi baÅŸka bir kelime ile deÄŸiÅŸtirir.
document.write(
  "Metin iÃ§erisindeki yazÄ±lÄ±mÄ± software ile deÄŸiÅŸtirme :",
  metin.replace("yazÄ±lÄ±m", "software") + "<br/>" + "<br/>"
);
// toLocaleUpperCase ==> TÃ¼m ifadeyi bÃ¼yÃ¼k harf olarak gÃ¼nceller.
document.write(
  "Metinin tÃ¼m harfleri bÃ¼yÃ¼k harf :",
  metin.toLocaleUpperCase() + "<br/>" + "<br/>"
);

// toLocaleLowerCase ==> TÃ¼m ifadeyi kÃ¼Ã§Ã¼k harf olarak gÃ¼nceller.
document.write(
  "Metinin tÃ¼m harfleri kÃ¼Ã§Ã¼k harf :",
  metin.toLocaleLowerCase() + "<br/>"
);

// concat ==> Ä°ki ifadeyi birleÅŸtirir.
document.write(
  "BirleÅŸtirilmiÅŸ ifade :",
  metin.concat(metin, "Zeynep Suna Ã–zÃ§elik") + "<br/>"
);
document.write("----------------------------------------" + "<br/>");

var number = 12.345665432;
document.write("SayÄ± :", number + "<br/>");
document.write("SayÄ±nÄ±n tipi :", typeof number + "<br/>");
// toString() ==> ile ifadeleri stringe Ã§evirir.
document.write(
  "SayÄ±nÄ±n tipini stringe Ã§evir :",
  typeof number.toString() + "<br/>"
);
//  toFixed ==> OndalÄ±klÄ± sayÄ±lar iÃ§in . dan sonra kaÃ§ basamak olacaÄŸÄ±nÄ± belirler.
document.write("SayÄ± :", number.toFixed(5) + "<br/>");
// Math.round ==> SayÄ±yÄ±  en yakÄ±n tamsayÄ±ya yuvarlar.
document.write(
  "SayÄ±nÄ±n en yakÄ±n tam sayÄ±ya yuvarlanmÄ±ÅŸ hali :",
  Math.round(number) + "<br/>"
);
// Math.ceil ==> SayÄ±yÄ±  bir Ã¼st tamsayÄ±ya yuvarlar.
document.write(
  "SayÄ±nÄ±n bir Ã¼st tamsayÄ±ya yuvarlanmÄ±ÅŸ hali :",
  Math.ceil(number) + "<br/>"
);

// Math.floor ==> SayÄ±yÄ±  bir alt tamsayÄ±ya yuvarlar.
document.write(
  "SayÄ±nÄ±n bir alt tamsayÄ±ya yuvarlanmÄ±ÅŸ hali :",
  Math.floor(number) + "<br/>"
);

var sayÄ±1 = "12";
// parseInt ==> Veriyi number tipine Ã§evirir.
document.write("SayÄ± 1 in tipi :", typeof parseInt(sayÄ±1) + "<br/>");
document.write("----------------------------------------" + "<br/>");
// Math.max ==> SayÄ±lardan en bÃ¼yÃ¼ÄŸÃ¼nÃ¼ bulur.
document.write(
  "SayÄ±lardan en bÃ¼yÃ¼ÄŸÃ¼ :",
  Math.max(1, 2, 4, 56, 98765) + "<br/>"
);
// Math.min ==> SayÄ±lardan en kÃ¼Ã§Ã¼ÄŸÃ¼nÃ¼ bulur.
document.write(
  "SayÄ±lardan en kÃ¼Ã§Ã¼ÄŸÃ¼ :",
  Math.min(1, 2, 4, 56, 98765) + "<br/>"
);

// Math.random ==> 0 ile 1 arasÄ±nda rastgele sayÄ±lar oluÅŸturur.
document.write("Rastegele SayÄ± :", Math.random() + "<br/>");
document.write("Rastegele SayÄ±-1 :", Math.round(Math.random() * 10) + "<br/>");
document.write("----------------------------------------" + "<br/>");
// ! Javascript Diziler: Verileri daha kolay yÃ¶netmek ve dizilerim sahip olduÄŸu metotlardan faydalanmak iÃ§in diziler kullanÄ±lÄ±r.

// var number1 = 1;
// var number2 = 2;
// var number3 = 3;
// var number4 = 4;
// var number5 = 5;

var numbers = [1, 2, 3, 4, 5];
document.write("SayÄ±lar :", numbers + "<br/>");

var dizi = ["ZEYNEP", "HÃœSEYÄ°N", "MUHLÄ°S", 12, 43, 17, 12332];
document.write("Dizi :", dizi + "<br/>");
document.write("Dizinin 1. ElemanÄ± :", dizi[0] + "<br/>");
document.write("Dizinin 2. ElemanÄ± :", dizi[1] + "<br/>");
document.write("Dizinin 7. ElemanÄ± :", dizi[6] + "<br/>");
/*
 Dizilerin verileri bir arada tuttuÄŸundan bahsettik.
 Dizilerde dizinin tÃ¼m elemanlarÄ±na eriÅŸebildiÄŸimiz gibi tek tek de elemanlara eriÅŸebiliriz.
 Bunun iÃ§in dizinin adÄ± yazÄ±lÄ±r [] iÃ§erisinde dizinin hangi elemanÄ±na eriÅŸmek istiyorsak bu belirtilir.
 ! FAKAT dizilerde elemanlara 'index' numarasÄ± ile eriÅŸilir.Ve bu index 1. eleman iÃ§in sÄ±fÄ±r ,2. eleman iÃ§in 1 dir.Yani her eleman iÃ§in index bu elemanÄ±n 1 eksiÄŸidir. Bunu diziler saymaya sÄ±fÄ±rdan baÅŸlÄ±yor ÅŸeklinde akÄ±lda tutabiliriz.

*/
